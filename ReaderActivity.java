package vimalesh.fire;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;

import java.util.ArrayList;

public class ReaderActivity extends AppCompatActivity {
    private Button scan_btn;
    FirebaseAuth mauth;
    FirebaseDatabase database = FirebaseDatabase.getInstance();
    UserInformation uInfo = new UserInformation();
    private static final String TAG = "displayActivty";
    //    private FirebaseDatabase mref;
    //private ArrayList<String> mmlistview = new ArrayList<>();
    private ListView mlistview;
    String user_id;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_reader);
        scan_btn = (Button) findViewById(R.id.scan_btn);
        final Activity activity = this;
        scan_btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                IntentIntegrator integrator = new IntentIntegrator(activity);
                integrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE_TYPES);
                integrator.setPrompt("Scan");
                integrator.setCameraId(0);
                integrator.setBeepEnabled(false);
                integrator.setBarcodeImageEnabled(false);
                integrator.initiateScan();
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
        if (result != null) {
            if (result.getContents() == null) {
                Toast.makeText(this, "You cancelled the scanning", Toast.LENGTH_LONG).show();
            } else {
                String hai = result.getContents();


                FirebaseUser currentFirebaseUser = FirebaseAuth.getInstance().getCurrentUser();

                 user_id = currentFirebaseUser.getUid();
                //Toast.makeText(this,user_id,Toast.LENGTH_LONG).show();
                String barcode = result.getBarcodeImagePath();
                Toast.makeText(this, barcode, Toast.LENGTH_LONG).show();
                DatabaseReference myRef1 = database.getReference().child("user").child(user_id); //Getting root reference
                String key = myRef1.push().getKey();           //this returns the unique key generated by firebase
                myRef1.child("barcode").setValue(hai);
                //myRef1.child(key).child("barcode number").setValue(barcode);
                DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
                // = FirebaseDatabase.getInstance();
                mlistview = (ListView) findViewById(R.id.hai);
                //currentFirebaseUser = FirebaseAuth.getInstance().getCurrentUser();
                //userid = currentFirebaseUser.getUid();

                ref.addValueEventListener(new ValueEventListener() {
                    int i=1;
                    @Override
                    public void onDataChange (DataSnapshot dataSnapshot){
                            if(i>0) {
                                showData(dataSnapshot);
                            i--;
                            }
                    }


                    @Override
                    public void onCancelled(DatabaseError databaseError) {

                    }
                });


            }
        } else {
            super.onActivityResult(requestCode, resultCode, data);
        }
    }


    private void showData(DataSnapshot dataSnapshot) {
        for (DataSnapshot ds : dataSnapshot.getChildren()) {

            //          uInfo.setemail(ds.getValue(UserInformation.class).getemail()); //set the email
              uInfo.setbarcode(ds.child(user_id).getValue(UserInformation.class).getbarcode()); //set the name
            uInfo.setbalance(ds.child(user_id).getValue(UserInformation.class).getbalance()); //set the phone_num
            //
            break;
            }
String er=uInfo.getbalance();
            int j=Integer.parseInt(er);
            String t = uInfo.getbarcode();
            int y = Integer.parseInt(t);
            j=j-y;
            //int ya=
            String h = Integer.toString(j);
            FirebaseUser currentFirebaseUser = FirebaseAuth.getInstance().getCurrentUser();

            user_id = currentFirebaseUser.getUid();

            DatabaseReference myRef1 = database.getReference().child("user").child(user_id); //Getting root reference
            String key = myRef1.push().getKey();           //this returns the unique key generated by firebase
            myRef1.child("balance").setValue(h);



            Toast.makeText(getApplicationContext(), h, Toast.LENGTH_LONG).show();
            //display all the information
            //Log.d(TAG, "showData: name: " + uInfo.getname());
            //Log.d(TAG, "showData: email: " + uInfo.getemail());
            //Log.d(TAG, "showData: phone_num: " + uInfo.getPhone_num());

            ArrayList<String> array = new ArrayList<>();

        }
    }


